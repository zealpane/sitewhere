option optimize_for = LITE_RUNTIME;

option java_package = "com.sitewhere.communication.protobuf.proto";

// Model Objects
message Model {
	
	// A single piece of metadata.
	message Metadata {
		required string name = 1;
		required string value = 2;
	}

	// Report device location.
	message DeviceLocation {
		required string hardwareId = 1;
		required double latitude = 2;
		required double longitude = 3;
		optional double elevation = 4;
		optional fixed64 eventDate = 5;
		repeated Metadata metadata = 6;
		optional bool updateState = 7;
	}

	// Report device alert.
	message DeviceAlert {
		required string hardwareId = 1;
		required string alertType = 2;
		required string alertMessage = 3;
		optional fixed64 eventDate = 4;
		repeated Metadata metadata = 5;
		optional bool updateState = 6;
	}
	
	// A single measurement.
	message Measurement {
		required string measurementId = 1;
		required double measurementValue = 2;
	}

	// Event message for device measurements.
	message DeviceMeasurements {
		required string hardwareId = 1;
		repeated Measurement measurement = 2;
		optional fixed64 eventDate = 3;
		repeated Metadata metadata = 4;
		optional bool updateState = 5;
	}
	
	// Create a device stream.
	message DeviceStream {
		required string hardwareId = 1;
		required string streamId = 2;
		required string contentType = 3;
		repeated Metadata metadata = 4;
	}
	
	// A chunk of streaming data.
	message DeviceStreamData {
		required string hardwareId = 1;
		required string streamId = 2;
		required fixed64 sequenceNumber = 3;
		required bytes data = 4;
		optional fixed64 eventDate = 5;
		repeated Metadata metadata = 6;
	}
}

// Commands sent from a device to SiteWhere.
message SiteWhere {

	enum Command {
		SEND_REGISTRATION = 1; 
		SEND_ACKNOWLEDGEMENT = 2; 
		SEND_DEVICE_LOCATION = 3; 
		SEND_DEVICE_ALERT = 4; 
		SEND_DEVICE_MEASUREMENTS = 5;
		SEND_DEVICE_STREAM = 6;
		SEND_DEVICE_STREAM_DATA = 7;
		REQUEST_DEVICE_STREAM_DATA = 8;
	}
	
	// Header contains the command and originator.
	message Header {
		required Command command = 1;
		optional string originator = 2;
	}

	// Register a device with SiteWhere.
	message RegisterDevice {
		required string hardwareId = 1;
		required string deviceTypeToken = 2;
		repeated Model.Metadata metadata = 3;
		optional string areaToken = 4;
	}

	// Acknowledge previous command.
	message Acknowledge {
		required string hardwareId = 1;
		optional string message = 2;
	}
	
	// Request for a chunk of data from a device stream.
	message DeviceStreamDataRequest {
		required string hardwareId = 1;
		required string streamId = 2;
		required fixed64 sequenceNumber = 3;
	}
}

// Commands sent from SiteWhere to a device.
message Device {

	enum Command {
		ACK_REGISTRATION = 1; 
		ACK_DEVICE_STREAM = 2;
		RECEIVE_DEVICE_STREAM_DATA = 3;
	} 
	
	// Header contains the command and originator.
	message Header {
		required Command command = 1;
		optional string originator = 2;
		optional string nestedPath = 3;
		optional string nestedSpec = 4;
	}

	// Enumeration of registation state responses.
	enum RegistrationAckState {NEW_REGISTRATION = 1; ALREADY_REGISTERED = 2; REGISTRATION_ERROR = 3;} 
	enum RegistrationAckError {INVALID_SPECIFICATION = 1; SITE_TOKEN_REQUIRED = 2; NEW_DEVICES_NOT_ALLOWED = 3;} 

	// Acknowledges registration.
	message RegistrationAck {
		required RegistrationAckState state = 1;
		optional RegistrationAckError errorType = 2;
		optional string errorMessage = 3;
	}
	
	// Enumeration of device stream creation responses.
	enum DeviceStreamAckState {STREAM_CREATED = 1; STREAM_EXISTS = 2; STREAM_FAILED = 3;} 
	
	// Acknowledges creation of device stream.
	message DeviceStreamAck {
		required string streamId = 1;
		required DeviceStreamAckState state = 2;
	}
}