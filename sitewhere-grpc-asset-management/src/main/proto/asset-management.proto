syntax = "proto3";

package com.sitewhere.grpc.service;

option java_multiple_files = true;
option java_package = "com.sitewhere.grpc.service";
option java_outer_classname = "AssetServices";

import "sitewhere-common.proto";
import "asset-model.proto";

// Asset management APIs.
service AssetManagement {

	// ###################
	// ### ASSET TYPES ###
	// ###################

	// Create an asset type.
	rpc CreateAssetType (GCreateAssetTypeRequest) returns (GCreateAssetTypeResponse) {}

	// Update an existing asset type.
	rpc UpdateAssetType (GUpdateAssetTypeRequest) returns (GUpdateAssetTypeResponse) {}

	// Get an asset type by unique id.
	rpc GetAssetTypeById (GGetAssetTypeByIdRequest) returns (GGetAssetTypeByIdResponse) {}

	// Get an asset type by token.
	rpc GetAssetTypeByToken (GGetAssetTypeByTokenRequest) returns (GGetAssetTypeByTokenResponse) {}

	// Delete an asset type.
	rpc DeleteAssetType (GDeleteAssetTypeRequest) returns (GDeleteAssetTypeResponse) {}

	// List asset types that match criteria.
	rpc ListAssetTypes (GListAssetTypesRequest) returns (GListAssetTypesResponse) {}

	// ##############
	// ### ASSETS ###
	// ##############

	// Create an asset.
	rpc CreateAsset (GCreateAssetRequest) returns (GCreateAssetResponse) {}

	// Update an existing asset.
	rpc UpdateAsset (GUpdateAssetRequest) returns (GUpdateAssetResponse) {}

	// Get an asset by unique id.
	rpc GetAssetById (GGetAssetByIdRequest) returns (GGetAssetByIdResponse) {}

	// Get an asset by token.
	rpc GetAssetByToken (GGetAssetByTokenRequest) returns (GGetAssetByTokenResponse) {}

	// Delete an asset.
	rpc DeleteAsset (GDeleteAssetRequest) returns (GDeleteAssetResponse) {}

	// List assets that match criteria.
	rpc ListAssets (GListAssetsRequest) returns (GListAssetsResponse) {}
}

// ###################
// ### ASSET TYPES ###
// ###################
		
// Request for creating an asset type.
message GCreateAssetTypeRequest {
	com.sitewhere.grpc.model.GAssetTypeCreateRequest request = 1;
}

// Response from creating an asset type.
message GCreateAssetTypeResponse {
	com.sitewhere.grpc.model.GAssetType assetType = 1;
}
		
// Request for updating an asset type.
message GUpdateAssetTypeRequest {
	com.sitewhere.grpc.model.GUUID assetTypeId = 1;
	com.sitewhere.grpc.model.GAssetTypeCreateRequest request = 2;
}

// Response from updating an asset type.
message GUpdateAssetTypeResponse {
	com.sitewhere.grpc.model.GAssetType assetType = 1;
}
	
// Request for getting an asset type by id.
message GGetAssetTypeByIdRequest {
	com.sitewhere.grpc.model.GUUID assetTypeId = 1;
}

// Response for getting an asset type by id.
message GGetAssetTypeByIdResponse {
	com.sitewhere.grpc.model.GAssetType assetType = 1;
}
	
// Request for getting an asset type by token.
message GGetAssetTypeByTokenRequest {
	string token = 1;
}

// Response for getting an asset type by token.
message GGetAssetTypeByTokenResponse {
	com.sitewhere.grpc.model.GAssetType assetType = 1;
}

// Request for deleting an asset type.
message GDeleteAssetTypeRequest {
	com.sitewhere.grpc.model.GUUID assetTypeId = 1;
}

// Response for deleting an asset type.
message GDeleteAssetTypeResponse {
	com.sitewhere.grpc.model.GAssetType assetType = 1;
}

// Request for listing asset types by critieria.
message GListAssetTypesRequest {
	com.sitewhere.grpc.model.GAssetTypeSearchCriteria criteria = 1; 
}

// Response for listing asset types by critieria.
message GListAssetTypesResponse {
	com.sitewhere.grpc.model.GAssetTypeSearchResults results = 1; 
}

// ##############
// ### ASSETS ###
// ##############
		
// Request for creating an asset.
message GCreateAssetRequest {
	com.sitewhere.grpc.model.GAssetCreateRequest request = 1;
}

// Response from creating an asset.
message GCreateAssetResponse {
	com.sitewhere.grpc.model.GAsset asset = 1;
}
		
// Request for updating an asset.
message GUpdateAssetRequest {
	com.sitewhere.grpc.model.GUUID assetId = 1;
	com.sitewhere.grpc.model.GAssetCreateRequest request = 2;
}

// Response from updating an asset.
message GUpdateAssetResponse {
	com.sitewhere.grpc.model.GAsset asset = 1;
}
	
// Request for getting an asset by id.
message GGetAssetByIdRequest {
	com.sitewhere.grpc.model.GUUID assetId = 1;
}

// Response for getting an asset by id.
message GGetAssetByIdResponse {
	com.sitewhere.grpc.model.GAsset asset = 1;
}
	
// Request for getting an asset by token.
message GGetAssetByTokenRequest {
	string token = 1;
}

// Response for getting an asset by token.
message GGetAssetByTokenResponse {
	com.sitewhere.grpc.model.GAsset asset = 1;
}

// Request for deleting an asset.
message GDeleteAssetRequest {
	com.sitewhere.grpc.model.GUUID assetId = 1;
}

// Response for deleting an asset.
message GDeleteAssetResponse {
	com.sitewhere.grpc.model.GAsset asset = 1;
}

// Request for listing assets by critieria.
message GListAssetsRequest {
	com.sitewhere.grpc.model.GAssetSearchCriteria criteria = 1; 
}

// Response for listing assets by critieria.
message GListAssetsResponse {
	com.sitewhere.grpc.model.GAssetSearchResults results = 1; 
}
