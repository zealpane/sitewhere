
/*
 * 
 */

package com.sitewhere.asset.modules.wso2.ws;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.3.1
 * Wed Aug 05 14:07:18 EDT 2015
 * Generated source version: 2.3.1
 * 
 */


@WebServiceClient(name = "RemoteUserStoreManagerService", 
                  wsdlLocation = "file:/C:/Users/Derek/Documents/GitHub/sitewhere/sitewhere-wso2/src/main/resources/wsdl/RemoteUserStoreManagerService.wsdl",
                  targetNamespace = "http://service.ws.um.carbon.wso2.org") 
public class RemoteUserStoreManagerService extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://service.ws.um.carbon.wso2.org", "RemoteUserStoreManagerService");
    public final static QName RemoteUserStoreManagerServiceHttpsSoap12Endpoint = new QName("http://service.ws.um.carbon.wso2.org", "RemoteUserStoreManagerServiceHttpsSoap12Endpoint");
    public final static QName RemoteUserStoreManagerServiceHttpsEndpoint = new QName("http://service.ws.um.carbon.wso2.org", "RemoteUserStoreManagerServiceHttpsEndpoint");
    public final static QName RemoteUserStoreManagerServiceHttpsSoap11Endpoint = new QName("http://service.ws.um.carbon.wso2.org", "RemoteUserStoreManagerServiceHttpsSoap11Endpoint");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/Users/Derek/Documents/GitHub/sitewhere/sitewhere-wso2/src/main/resources/wsdl/RemoteUserStoreManagerService.wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from file:/C:/Users/Derek/Documents/GitHub/sitewhere/sitewhere-wso2/src/main/resources/wsdl/RemoteUserStoreManagerService.wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public RemoteUserStoreManagerService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public RemoteUserStoreManagerService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public RemoteUserStoreManagerService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public RemoteUserStoreManagerService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }
    public RemoteUserStoreManagerService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public RemoteUserStoreManagerService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns RemoteUserStoreManagerServicePortType
     */
    @WebEndpoint(name = "RemoteUserStoreManagerServiceHttpsSoap12Endpoint")
    public RemoteUserStoreManagerServicePortType getRemoteUserStoreManagerServiceHttpsSoap12Endpoint() {
        return super.getPort(RemoteUserStoreManagerServiceHttpsSoap12Endpoint, RemoteUserStoreManagerServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RemoteUserStoreManagerServicePortType
     */
    @WebEndpoint(name = "RemoteUserStoreManagerServiceHttpsSoap12Endpoint")
    public RemoteUserStoreManagerServicePortType getRemoteUserStoreManagerServiceHttpsSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(RemoteUserStoreManagerServiceHttpsSoap12Endpoint, RemoteUserStoreManagerServicePortType.class, features);
    }
    /**
     * 
     * @return
     *     returns RemoteUserStoreManagerServicePortType
     */
    @WebEndpoint(name = "RemoteUserStoreManagerServiceHttpsEndpoint")
    public RemoteUserStoreManagerServicePortType getRemoteUserStoreManagerServiceHttpsEndpoint() {
        return super.getPort(RemoteUserStoreManagerServiceHttpsEndpoint, RemoteUserStoreManagerServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RemoteUserStoreManagerServicePortType
     */
    @WebEndpoint(name = "RemoteUserStoreManagerServiceHttpsEndpoint")
    public RemoteUserStoreManagerServicePortType getRemoteUserStoreManagerServiceHttpsEndpoint(WebServiceFeature... features) {
        return super.getPort(RemoteUserStoreManagerServiceHttpsEndpoint, RemoteUserStoreManagerServicePortType.class, features);
    }
    /**
     * 
     * @return
     *     returns RemoteUserStoreManagerServicePortType
     */
    @WebEndpoint(name = "RemoteUserStoreManagerServiceHttpsSoap11Endpoint")
    public RemoteUserStoreManagerServicePortType getRemoteUserStoreManagerServiceHttpsSoap11Endpoint() {
        return super.getPort(RemoteUserStoreManagerServiceHttpsSoap11Endpoint, RemoteUserStoreManagerServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RemoteUserStoreManagerServicePortType
     */
    @WebEndpoint(name = "RemoteUserStoreManagerServiceHttpsSoap11Endpoint")
    public RemoteUserStoreManagerServicePortType getRemoteUserStoreManagerServiceHttpsSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(RemoteUserStoreManagerServiceHttpsSoap11Endpoint, RemoteUserStoreManagerServicePortType.class, features);
    }

}
